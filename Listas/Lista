public class Lista {

    private Nodo cabeza;

    public Lista() {
        this.cabeza = null;
    }

    public void insertarNodoInicio(int dato) {
        Nodo nodoIni = new Nodo(dato);
        nodoIni.siguiente = cabeza;
        cabeza = nodoIni;
    }

    public void insertarNodoFinal(int dato) {
        Nodo nodoFin = new Nodo(dato);
        Nodo nodoRecorre = cabeza;

        while (nodoRecorre.siguiente != null) {
            nodoRecorre = nodoRecorre.siguiente;
        }
        nodoRecorre.siguiente = nodoFin;
    }

    public void insertarNodoIndice(int dato, int k) {
        Nodo nodoIndice = new Nodo(dato);
        Nodo nodoRecorre = cabeza;
        int i = 1;

        while (i < k) {
            nodoRecorre = nodoRecorre.siguiente;
            i++;
        }
        nodoIndice.siguiente = nodoRecorre.siguiente;
        nodoRecorre.siguiente = nodoIndice;

    }

    public void imprimirLista() {
        Nodo nodoRecorre = cabeza;

        while (nodoRecorre != null) {
            System.out.print(nodoRecorre.dato + "->");
            nodoRecorre = nodoRecorre.siguiente;
        }
        System.out.println("NULL");
    }

    public int getTama√±o() {
        int i = 0;
        Nodo nodoRecorre = cabeza;
        while (nodoRecorre != null) {
            i++;
            nodoRecorre = nodoRecorre.siguiente;
        }
        return i;
    }

    public boolean isEmpty() {
        return (cabeza == null);
    }

    public void eliminarNodoInicio() {
        Nodo inicio = cabeza;
        cabeza = inicio.siguiente;
        inicio.siguiente = null;
    }

    public void eliminarNodoFinal() {

        if (cabeza.siguiente == null) {
            cabeza = null;
        } else {
            Nodo nodoRecorre = cabeza;
            while (nodoRecorre.siguiente.siguiente != null) {
                nodoRecorre = nodoRecorre.siguiente;
            }
            nodoRecorre.siguiente = null;
        }
    }
    
    public void eliminarIndice(int indice){
       
        Nodo nodoRecorre=cabeza;
        int cont=0;
        while(cont<(indice-1)&&nodoRecorre.siguiente.siguiente!=null)
        {
            nodoRecorre=nodoRecorre.siguiente;
            cont++;
        }
        Nodo aux= nodoRecorre.siguiente;
        nodoRecorre.siguiente=aux.siguiente;
        aux.siguiente=null;
    }

    public Nodo buscarIndice(int idx)
    {
        
    }
}
